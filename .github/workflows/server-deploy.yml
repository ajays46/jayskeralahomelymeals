name: Deploy Server to EC2

on:
  push:
    branches:
      - main
    paths:
      - 'Server/**'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22.15.0'
        cache: 'npm'
        cache-dependency-path: Server/package-lock.json

    - name: Install dependencies
      working-directory: ./Server
      run: npm ci

    - name: Generate Prisma client
      working-directory: ./Server
      run: npm run db:generate

    # --- REFINED DEBUG STEP ---
    - name: Debug DATABASE_URL presence
      working-directory: ./Server
      run: |
        echo "Attempting to read DATABASE_URL..."
        if [ -z "${{ secrets.DATABASE_URL }}" ]; then
          echo "Error: The secret 'DATABASE_URL' is truly empty or not found by the workflow system."
          echo "Please double-check GitHub Repository/Environment Secrets."
          exit 1
        else
          echo "Secret 'DATABASE_URL' is being passed from GitHub (value masked)."
          # Print the variable directly to confirm it's seen as existing by the shell
          echo "Raw DATABASE_URL (masked): ${{ secrets.DATABASE_URL }}"
          # Get length of the masked string (should be > 0 if secret is set)
          echo "Length of masked DATABASE_URL: ${#DATABASE_URL}"
        fi
      env: # Ensure DATABASE_URL is available for the shell command in this step
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
    # --- END REFINED DEBUG STEP ---

    - name: Run database migrations
      working-directory: ./Server
      run: npm run db:migrate
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }}

    - name: Deploy to EC2
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        port: ${{ secrets.EC2_PORT }}
        script: |
          # Define common variables
          PROJECT_DIR="jayskeralahomelymeals/Server"
          PM2_APP_NAME="jayskeralahm-server"

          # Navigate to project directory
          cd "$PROJECT_DIR" || { echo "Error: Project directory not found"; exit 1; }

          # Pull latest changes
          git pull origin main || { echo "Error: Git pull failed"; exit 1; }

          # Install dependencies
          npm ci || { echo "Error: npm ci failed"; exit 1; }

          # Generate Prisma client
          npm run db:generate || { echo "Error: Prisma client generation failed"; exit 1; }

          # Run database migrations (on EC2)
          # IMPORTANT: For this step to work on EC2, DATABASE_URL must be available
          # in the EC2 instance's environment (e.g., via PM2 ecosystem file, .env file on EC2, or AWS Parameter Store).
          # This workflow does NOT create the .env file on EC2 with secrets.
          npm run db:migrate || { echo "Error: Database migrations failed on EC2"; exit 1; }

          # Restart the application
          pm2 reload "$PM2_APP_NAME" || pm2 start src/App.js --name "$PM2_APP_NAME" || { echo "Error: PM2 operation failed"; exit 1; }

          echo "Deployment completed successfully!"
