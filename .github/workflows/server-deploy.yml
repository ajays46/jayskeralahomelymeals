name: Deploy Server to EC2 

on:
  push:
    branches:
      - main
    paths:
      - 'Server/**'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22.15.0'
        cache: 'npm'
        cache-dependency-path: Server/package-lock.json

    - name: Install dependencies
      working-directory: ./Server
      run: npm ci

    - name: Generate Prisma client
      working-directory: ./Server
      run: npm run db:generate

    - name: Run database migrations
      working-directory: ./Server
      run: npm run db:migrate
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }} 


    - name: Deploy to EC2
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        port: ${{ secrets.EC2_PORT }}
        script: |
          # Define common variables
          PROJECT_DIR="jayskeralahomelymeals/Server"
          PM2_APP_NAME="jayskeralahm-server"

          # Navigate to project directory
          cd "$PROJECT_DIR" || { echo "Error: Project directory not found"; exit 1; } # Exit if dir not found

          # Pull latest changes
          git pull origin main || { echo "Error: Git pull failed"; exit 1; }

          # Install dependencies (only if package-lock.json changes, for optimization)
          # A more robust check might involve comparing checksums or git status
          npm ci || { echo "Error: npm ci failed"; exit 1; }

          # Generate Prisma client
          npm run db:generate || { echo "Error: Prisma client generation failed"; exit 1; }

          # Run database migrations
          npm run db:migrate || { echo "Error: Database migrations failed"; exit 1; }

          # Restart the application
          # Using "pm2 reload" for graceful restarts if possible, otherwise "restart"
          pm2 reload "$PM2_APP_NAME" || pm2 start src/App.js --name "$PM2_APP_NAME" || { echo "Error: PM2 operation failed"; exit 1; }

          echo "Deployment completed successfully!"